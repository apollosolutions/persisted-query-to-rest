# yaml-language-server: $schema=.vscode/configuration_schema.json
# Common config for all endpoints
common:
    path_prefix: "/api/v1"
    listen: "0.0.0.0:3000"
    graphql_endpoint: "https://localhost:3000/"
    logging:
        level: info

# A list of all the new endpoints to create
endpoints:
    # Create an endpoint that requires the id in the path
    - path: "/users/:id"
      pq_id: "123456789"
      path_arguments:
          # Map the arguments to the GraphQL arg called $userId
          - from: "id"
            to: "userId"

    - path: "/products"
      pq_id: "123456789"

      # API for all users with url params
    - path: "/users"
      pq_id: "123456789"
      # Look for these values in the url query params
      # Maps `/users?sort=X` to GQL `query GetUsers(userSort: String!) { ... }`
      query_params:
          - from: "sort"
            to: "userSortInput"
            required: true

    # Mutation for updating the user’s email
    - path: "/users/:id/email"
      method: "PATCH"
      pq_id: "123456789"
      path_arguments:
          # Map the arguments to the GraphQL arg called $userId
          # This will be added as a root variable joined on the object below
          - from: "id"
            to: "userId"
      # Since the GraphQL variables are just a JSON object,
      # an easy way to pass complicated input types is to just put it in the body
      # and pass that on as-is to the GraphQL input
      # { “input”: { “email”: “foo@example.com”, “sendNotification”: true } }
      body_params:
          - from: "email"
            required: false
          - from: "sendNotification"
            required: false
            kind: boolean
